/**
 * This module handles the chat window.
 */
module.exports = {
  /**
   * Adds a chat message to history, returning the message.
   * @param {Object} command The command object we received. Supposed to be a chatmessage.
   * @param {string} name    The name of the client who send the message.
   * @return {Object} message  The message object to be delivered to the other users.
   */
  addChatMessage: function(command, name) {
    if (!command.message) {
      log.error('Received malformed chatmessage, no message attached ', command);
      var message = null;
    } else {
      var message = new ChatMessage(dateToTimestamp(new Date()), name, util.escapeHtml(command.message))
      history.push(message);
    }

    return message;
  },

  /**
   * Returns the current chat history. (For new users)
   * @return {array} history  The array containting all the chat message up to now.
   */
  getChatHistory: function() {
    return history;
  }
};

var log = require('logger'),
    util = require('myutil'),
    fs = require('fs');
var history = []; //The array containting all the chat message up to now.

/**
 * Contains one entry in the chat.
 * @param {string} date    A timestamp of when the message was received by the server, in the format Hours:Minutes:Seconds.
 * @param {string} name    The name of the user who sent the message.
 * @param {string} message The content of the message.
 */
function ChatMessage(date, name, message) {
  this.date = date;
  this.name = name;
  this.message = message;
}

/**
 * Turns a Date object into a Chat-Timestamp.
 * @param  {Date} date The date of the time the message was received at the server.
 * @return {string} timestamp The chat timestamp corresponding to the date.
 */
function dateToTimestamp(date) {
  return date.getUTCHours() + ':' + date.getUTCMinutes() + ':' + date.getUTCSeconds();
}
